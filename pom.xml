<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>dk.clanie</groupId>
		<artifactId>clanie-parent-pom</artifactId>
		<version>1.7.0</version>
	</parent>

	<artifactId>clanie-aspects</artifactId>
	<version>0.0.1</version>
	<packaging>jar</packaging>

	<name>Aspects</name>
	<description>Reusable AspectJ aspects.</description>
	<inceptionYear>2011</inceptionYear>

	<url>https://github.com/clanie/clanie-aspects</url>

	<scm>
		<connection>scm:git:ssh://git@github.com/clanie/clanie-aspects.git</connection>
		<url>https://github.com/clanie/clanie-aspects</url>
	  <tag>clanie-aspects-0.0.1</tag>
  </scm>


	<properties>
		<version.spring>3.2.0.RELEASE</version.spring>
	</properties>


	<build>
		<plugins>
 			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.5.1</version>
				<configuration>
					<!--
					Following exclusions makes it possible to build with Maven BUT 
						it breakes the project in Eclipse/STS...
					<excludes> <exclude>**/*.java</exclude> </excludes>
					<testExcludes> <exclude>**/*.java</exclude> </testExcludes>
					-->
					<compilerVersion>${version.java}</compilerVersion>
					<source>${version.java}</source>
					<target>${version.java}</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>aspectj-maven-plugin</artifactId>
				<version>1.4</version>
				<dependencies>
					<dependency>
						<groupId>org.aspectj</groupId>
						<artifactId>aspectjrt</artifactId>
						<version>${version.aspectj}</version>
					</dependency>
					<dependency>
						<groupId>org.aspectj</groupId>
						<artifactId>aspectjtools</artifactId>
						<version>${version.aspectj}</version>
					</dependency>
				</dependencies>
				<executions>
					<execution>
						<!--
						Executing in the process-sources phase to force aj compiler to 
						run before Java compiler, which otherwise fails.
						As stated in https://jira.codehaus.org/browse/MASPECTJ-92 this 
						may have undesired consequences as aj compiler now runs before
						eg. maven-resources-plugin:testResources and that's not the
						expected order
						-->
						<phase>process-sources</phase>
						<goals>
							<goal>compile</goal>
							<goal>test-compile</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<outxml>true</outxml>
					<aspectLibraries>
						<aspectLibrary>
							<groupId>org.springframework</groupId>
							<artifactId>spring-aspects</artifactId>
						</aspectLibrary>
					</aspectLibraries>
					<source>${version.java}</source>
					<target>${version.java}</target>
				</configuration>
			</plugin>
 		</plugins>
	</build>

	<dependencies>
		<!-- Get rid of commons-logging and use slf4j instead -->
		<dependency>
			<groupId>commons-logging</groupId>
			<artifactId>commons-logging</artifactId>
			<version>1.1.1</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>1.6.6</version>
		</dependency>

		<!-- External dependencies -->
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjrt</artifactId>
			<version>${version.aspectj}</version>
		</dependency>
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjweaver</artifactId>
			<version>${version.aspectj}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aop</artifactId>
			<version>${version.spring}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aspects</artifactId>
			<version>${version.spring}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${version.spring}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-tx</artifactId>
			<version>${version.spring}</version>
		</dependency>
		<dependency> <!-- Requered for proxying classes -->
			<groupId>cglib</groupId>
			<artifactId>cglib</artifactId>
			<version>2.2.2</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.persistence</groupId>
			<artifactId>javax.persistence</artifactId>
			<version>2.0.0</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.6.2</version>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>1.0.6</version>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.11</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-library</artifactId>
			<version>1.3</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${version.spring}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>joda-time</groupId>
			<artifactId>joda-time</artifactId>
			<version>2.1</version>
			<scope>test</scope>
		</dependency>

	</dependencies>

</project>